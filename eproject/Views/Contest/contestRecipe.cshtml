@model PagedList.IPagedList<eproject.Models.Recipe>
@using PagedList.Mvc;

@{
    ViewBag.Title = "contestRecipe";
    Layout = "~/Views/Shared/home.cshtml";
}
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
<br />
<div class="contest">
    <div class="container ">
        <div class="row">
            <div class="col-sm-12 wow flipInY">
                <input type="hidden" id="contest_id" name="contest_id" value="@ViewBag.contestId" />
                <input type="hidden" id="end_date" name="end_date" value="@ViewBag.endDate" />
                <input type="hidden" id="winner" name="winner" value="@ViewBag.w" />
                @using (Ajax.BeginForm("contestRecipe", "Contest", new AjaxOptions { InsertionMode = InsertionMode.Replace }, FormMethod.Get))
                {
                    if (@ViewBag.endDate <= DateTime.Today && @ViewBag.winner != null)
                    {
                        <h3 style="color:red">
                            The winner is : @ViewBag.winner @Html.ActionLink("Detail", "recipeDetail", "RecipeExtend",
                            new { id = @ViewBag.w }, new { target = "_blank", @class = "btn btn-warning" })
                        </h3>
                    }
                    <br />
                    <span>
                        <b>Find by recipe name</b> @Html.TextBox("search", ViewBag.CurrentFilter as string)
                        <input type="submit" value="Search" class="btn btn-info" />
                    </span>
                }
                <br />
                <table class="table table-striped table-bordered table-sm text-justify" cellspacing="0" width="100%">
                    <tr>                       
                        <th>
                            Recipe Name
                            <a href="@Url.Action("contestRecipe","Contest", new { sortOrder = ViewBag.NameSort })">
                                <img src="~/images/updown.svg" alt="Alternate Text" style="width: 15px;" />
                            </a>
                        </th>
                        <th>
                            Create Date
                            <a href="@Url.Action("contestRecipe","Contest", new { sortOrder = ViewBag.CreateDateSort })">
                                <img src="~/images/updown.svg" alt="Alternate Text" style="width: 15px;" />
                            </a>
                        </th>
                        <th>
                            Category
                            <a href="@Url.Action("contestRecipe","Contest", new { sortOrder = ViewBag.StartDateSort })">
                                <img src="~/images/updown.svg" alt="Alternate Text" style="width: 15px;" />
                            </a>
                        </th>
                        <th></th>
                    </tr>

                    @foreach (var item in Model)
                    {
                        <tr>                         
                            <td>
                                @Html.DisplayFor(modelItem => item.name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.createAt)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.category)
                            </td>
                            <td>
                                @Html.ActionLink("Read More", "recipeDetail", "RecipeExtend", new { id = item.id }, new { @class = "btn btn-warning", target = "_blank" })
                            </td>
                        </tr>
                    }
                </table>
                <div>
                    @Html.ActionLink("Back to List", "Index")
                </div>
                <br />
                Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

                @Html.PagedListPager(Model, page => Url.Action("contestRecipe",
                    new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter }))
            </div>
        </div>
    </div>
</div>
